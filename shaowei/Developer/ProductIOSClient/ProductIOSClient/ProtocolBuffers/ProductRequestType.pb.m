// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProductRequestType.pb.h"

@implementation ProductRequestTypeRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ProductRequestTypeRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Property ()
@property (retain) NSString* key;
@property (retain) NSString* value;
@end

@implementation Property

- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) value_ {
  hasKey_ = !!value_;
}
@synthesize key;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value_ {
  hasValue_ = !!value_;
}
@synthesize value;
- (void) dealloc {
  self.key = nil;
  self.value = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.key = @"";
    self.value = @"";
  }
  return self;
}
static Property* defaultPropertyInstance = nil;
+ (void) initialize {
  if (self == [Property class]) {
    defaultPropertyInstance = [[Property alloc] init];
  }
}
+ (Property*) defaultInstance {
  return defaultPropertyInstance;
}
- (Property*) defaultInstance {
  return defaultPropertyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKey) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKey) {
    [output writeString:1 value:self.key];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKey) {
    size_ += computeStringSize(1, self.key);
  }
  if (self.hasValue) {
    size_ += computeStringSize(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Property*) parseFromData:(NSData*) data {
  return (Property*)[[[Property builder] mergeFromData:data] build];
}
+ (Property*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Property*)[[[Property builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Property*) parseFromInputStream:(NSInputStream*) input {
  return (Property*)[[[Property builder] mergeFromInputStream:input] build];
}
+ (Property*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Property*)[[[Property builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Property*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Property*)[[[Property builder] mergeFromCodedInputStream:input] build];
}
+ (Property*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Property*)[[[Property builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Property_Builder*) builder {
  return [[[Property_Builder alloc] init] autorelease];
}
+ (Property_Builder*) builderWithPrototype:(Property*) prototype {
  return [[Property builder] mergeFrom:prototype];
}
- (Property_Builder*) builder {
  return [Property builder];
}
- (Property_Builder*) toBuilder {
  return [Property builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", self.key];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Property class]]) {
    return NO;
  }
  Property *otherMessage = other;
  return
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || [self.key isEqual:otherMessage.key]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasKey) {
    hashCode = hashCode * 31 + [self.key hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Property_Builder()
@property (retain) Property* result;
@end

@implementation Property_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Property alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Property_Builder*) clear {
  self.result = [[[Property alloc] init] autorelease];
  return self;
}
- (Property_Builder*) clone {
  return [Property builderWithPrototype:result];
}
- (Property*) defaultInstance {
  return [Property defaultInstance];
}
- (Property*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Property*) buildPartial {
  Property* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Property_Builder*) mergeFrom:(Property*) other {
  if (other == [Property defaultInstance]) {
    return self;
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Property_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Property_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setKey:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasKey {
  return result.hasKey;
}
- (NSString*) key {
  return result.key;
}
- (Property_Builder*) setKey:(NSString*) value {
  result.hasKey = YES;
  result.key = value;
  return self;
}
- (Property_Builder*) clearKey {
  result.hasKey = NO;
  result.key = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSString*) value {
  return result.value;
}
- (Property_Builder*) setValue:(NSString*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (Property_Builder*) clearValue {
  result.hasValue = NO;
  result.value = @"";
  return self;
}
@end

@interface ProductRequest ()
@property (retain) NSString* question;
@property (retain) PBAppendableArray * propertiesArray;
@property (retain) NSString* transactionId;
@end

@implementation ProductRequest

- (BOOL) hasQuestion {
  return !!hasQuestion_;
}
- (void) setHasQuestion:(BOOL) value_ {
  hasQuestion_ = !!value_;
}
@synthesize question;
@synthesize propertiesArray;
@dynamic properties;
- (BOOL) hasTransactionId {
  return !!hasTransactionId_;
}
- (void) setHasTransactionId:(BOOL) value_ {
  hasTransactionId_ = !!value_;
}
@synthesize transactionId;
- (void) dealloc {
  self.question = nil;
  self.propertiesArray = nil;
  self.transactionId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.question = @"";
    self.transactionId = @"";
  }
  return self;
}
static ProductRequest* defaultProductRequestInstance = nil;
+ (void) initialize {
  if (self == [ProductRequest class]) {
    defaultProductRequestInstance = [[ProductRequest alloc] init];
  }
}
+ (ProductRequest*) defaultInstance {
  return defaultProductRequestInstance;
}
- (ProductRequest*) defaultInstance {
  return defaultProductRequestInstance;
}
- (PBArray *)properties {
  return propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [propertiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasQuestion) {
    return NO;
  }
  for (Property* element in self.properties) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestion) {
    [output writeString:1 value:self.question];
  }
  for (Property *element in self.propertiesArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasTransactionId) {
    [output writeString:3 value:self.transactionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestion) {
    size_ += computeStringSize(1, self.question);
  }
  for (Property *element in self.propertiesArray) {
    size_ += computeMessageSize(2, element);
  }
  if (self.hasTransactionId) {
    size_ += computeStringSize(3, self.transactionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductRequest*) parseFromData:(NSData*) data {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromData:data] build];
}
+ (ProductRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromInputStream:input] build];
}
+ (ProductRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ProductRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductRequest*)[[[ProductRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductRequest_Builder*) builder {
  return [[[ProductRequest_Builder alloc] init] autorelease];
}
+ (ProductRequest_Builder*) builderWithPrototype:(ProductRequest*) prototype {
  return [[ProductRequest builder] mergeFrom:prototype];
}
- (ProductRequest_Builder*) builder {
  return [ProductRequest builder];
}
- (ProductRequest_Builder*) toBuilder {
  return [ProductRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"question", self.question];
  }
  for (Property* element in self.propertiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"properties"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTransactionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transactionId", self.transactionId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductRequest class]]) {
    return NO;
  }
  ProductRequest *otherMessage = other;
  return
      self.hasQuestion == otherMessage.hasQuestion &&
      (!self.hasQuestion || [self.question isEqual:otherMessage.question]) &&
      [self.propertiesArray isEqualToArray:otherMessage.propertiesArray] &&
      self.hasTransactionId == otherMessage.hasTransactionId &&
      (!self.hasTransactionId || [self.transactionId isEqual:otherMessage.transactionId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasQuestion) {
    hashCode = hashCode * 31 + [self.question hash];
  }
  for (Property* element in self.propertiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasTransactionId) {
    hashCode = hashCode * 31 + [self.transactionId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductRequest_Builder()
@property (retain) ProductRequest* result;
@end

@implementation ProductRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductRequest_Builder*) clear {
  self.result = [[[ProductRequest alloc] init] autorelease];
  return self;
}
- (ProductRequest_Builder*) clone {
  return [ProductRequest builderWithPrototype:result];
}
- (ProductRequest*) defaultInstance {
  return [ProductRequest defaultInstance];
}
- (ProductRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductRequest*) buildPartial {
  ProductRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductRequest_Builder*) mergeFrom:(ProductRequest*) other {
  if (other == [ProductRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestion) {
    [self setQuestion:other.question];
  }
  if (other.propertiesArray.count > 0) {
    if (result.propertiesArray == nil) {
      result.propertiesArray = [[other.propertiesArray copyWithZone:[other.propertiesArray zone]] autorelease];
    } else {
      [result.propertiesArray appendArray:other.propertiesArray];
    }
  }
  if (other.hasTransactionId) {
    [self setTransactionId:other.transactionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setQuestion:[input readString]];
        break;
      }
      case 18: {
        Property_Builder* subBuilder = [Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperties:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setTransactionId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestion {
  return result.hasQuestion;
}
- (NSString*) question {
  return result.question;
}
- (ProductRequest_Builder*) setQuestion:(NSString*) value {
  result.hasQuestion = YES;
  result.question = value;
  return self;
}
- (ProductRequest_Builder*) clearQuestion {
  result.hasQuestion = NO;
  result.question = @"";
  return self;
}
- (PBAppendableArray *)properties {
  return result.propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [result propertiesAtIndex:index];
}
- (ProductRequest_Builder *)addProperties:(Property*)value {
  if (result.propertiesArray == nil) {
    result.propertiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.propertiesArray addObject:value];
  return self;
}
- (ProductRequest_Builder *)setPropertiesArray:(NSArray *)array {
  result.propertiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductRequest_Builder *)setPropertiesValues:(const Property* *)values count:(NSUInteger)count {
  result.propertiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductRequest_Builder *)clearProperties {
  result.propertiesArray = nil;
  return self;
}
- (BOOL) hasTransactionId {
  return result.hasTransactionId;
}
- (NSString*) transactionId {
  return result.transactionId;
}
- (ProductRequest_Builder*) setTransactionId:(NSString*) value {
  result.hasTransactionId = YES;
  result.transactionId = value;
  return self;
}
- (ProductRequest_Builder*) clearTransactionId {
  result.hasTransactionId = NO;
  result.transactionId = @"";
  return self;
}
@end

@interface ProductConfirmRequest ()
@property (retain) NSString* question;
@property (retain) PBAppendableArray * propertiesArray;
@property (retain) NSString* server;
@property (retain) ProductClientInstruction* preInstruction;
@property (retain) ProductInteractiveQuestion* preQuestion;
@property (retain) NSString* transactionId;
@end

@implementation ProductConfirmRequest

- (BOOL) hasQuestion {
  return !!hasQuestion_;
}
- (void) setHasQuestion:(BOOL) value_ {
  hasQuestion_ = !!value_;
}
@synthesize question;
@synthesize propertiesArray;
@dynamic properties;
- (BOOL) hasServer {
  return !!hasServer_;
}
- (void) setHasServer:(BOOL) value_ {
  hasServer_ = !!value_;
}
@synthesize server;
- (BOOL) hasPreInstruction {
  return !!hasPreInstruction_;
}
- (void) setHasPreInstruction:(BOOL) value_ {
  hasPreInstruction_ = !!value_;
}
@synthesize preInstruction;
- (BOOL) hasPreQuestion {
  return !!hasPreQuestion_;
}
- (void) setHasPreQuestion:(BOOL) value_ {
  hasPreQuestion_ = !!value_;
}
@synthesize preQuestion;
- (BOOL) hasTransactionId {
  return !!hasTransactionId_;
}
- (void) setHasTransactionId:(BOOL) value_ {
  hasTransactionId_ = !!value_;
}
@synthesize transactionId;
- (void) dealloc {
  self.question = nil;
  self.propertiesArray = nil;
  self.server = nil;
  self.preInstruction = nil;
  self.preQuestion = nil;
  self.transactionId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.question = @"";
    self.server = @"";
    self.preInstruction = [ProductClientInstruction defaultInstance];
    self.preQuestion = [ProductInteractiveQuestion defaultInstance];
    self.transactionId = @"";
  }
  return self;
}
static ProductConfirmRequest* defaultProductConfirmRequestInstance = nil;
+ (void) initialize {
  if (self == [ProductConfirmRequest class]) {
    defaultProductConfirmRequestInstance = [[ProductConfirmRequest alloc] init];
  }
}
+ (ProductConfirmRequest*) defaultInstance {
  return defaultProductConfirmRequestInstance;
}
- (ProductConfirmRequest*) defaultInstance {
  return defaultProductConfirmRequestInstance;
}
- (PBArray *)properties {
  return propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [propertiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasQuestion) {
    return NO;
  }
  if (!self.hasServer) {
    return NO;
  }
  if (!self.hasPreInstruction) {
    return NO;
  }
  if (!self.hasPreQuestion) {
    return NO;
  }
  for (Property* element in self.properties) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.preInstruction.isInitialized) {
    return NO;
  }
  if (!self.preQuestion.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestion) {
    [output writeString:1 value:self.question];
  }
  for (Property *element in self.propertiesArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasServer) {
    [output writeString:3 value:self.server];
  }
  if (self.hasPreInstruction) {
    [output writeMessage:4 value:self.preInstruction];
  }
  if (self.hasPreQuestion) {
    [output writeMessage:5 value:self.preQuestion];
  }
  if (self.hasTransactionId) {
    [output writeString:6 value:self.transactionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestion) {
    size_ += computeStringSize(1, self.question);
  }
  for (Property *element in self.propertiesArray) {
    size_ += computeMessageSize(2, element);
  }
  if (self.hasServer) {
    size_ += computeStringSize(3, self.server);
  }
  if (self.hasPreInstruction) {
    size_ += computeMessageSize(4, self.preInstruction);
  }
  if (self.hasPreQuestion) {
    size_ += computeMessageSize(5, self.preQuestion);
  }
  if (self.hasTransactionId) {
    size_ += computeStringSize(6, self.transactionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductConfirmRequest*) parseFromData:(NSData*) data {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromData:data] build];
}
+ (ProductConfirmRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductConfirmRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromInputStream:input] build];
}
+ (ProductConfirmRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductConfirmRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ProductConfirmRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductConfirmRequest*)[[[ProductConfirmRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductConfirmRequest_Builder*) builder {
  return [[[ProductConfirmRequest_Builder alloc] init] autorelease];
}
+ (ProductConfirmRequest_Builder*) builderWithPrototype:(ProductConfirmRequest*) prototype {
  return [[ProductConfirmRequest builder] mergeFrom:prototype];
}
- (ProductConfirmRequest_Builder*) builder {
  return [ProductConfirmRequest builder];
}
- (ProductConfirmRequest_Builder*) toBuilder {
  return [ProductConfirmRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"question", self.question];
  }
  for (Property* element in self.propertiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"properties"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasServer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"server", self.server];
  }
  if (self.hasPreInstruction) {
    [output appendFormat:@"%@%@ {\n", indent, @"preInstruction"];
    [self.preInstruction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPreQuestion) {
    [output appendFormat:@"%@%@ {\n", indent, @"preQuestion"];
    [self.preQuestion writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTransactionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transactionId", self.transactionId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductConfirmRequest class]]) {
    return NO;
  }
  ProductConfirmRequest *otherMessage = other;
  return
      self.hasQuestion == otherMessage.hasQuestion &&
      (!self.hasQuestion || [self.question isEqual:otherMessage.question]) &&
      [self.propertiesArray isEqualToArray:otherMessage.propertiesArray] &&
      self.hasServer == otherMessage.hasServer &&
      (!self.hasServer || [self.server isEqual:otherMessage.server]) &&
      self.hasPreInstruction == otherMessage.hasPreInstruction &&
      (!self.hasPreInstruction || [self.preInstruction isEqual:otherMessage.preInstruction]) &&
      self.hasPreQuestion == otherMessage.hasPreQuestion &&
      (!self.hasPreQuestion || [self.preQuestion isEqual:otherMessage.preQuestion]) &&
      self.hasTransactionId == otherMessage.hasTransactionId &&
      (!self.hasTransactionId || [self.transactionId isEqual:otherMessage.transactionId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasQuestion) {
    hashCode = hashCode * 31 + [self.question hash];
  }
  for (Property* element in self.propertiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasServer) {
    hashCode = hashCode * 31 + [self.server hash];
  }
  if (self.hasPreInstruction) {
    hashCode = hashCode * 31 + [self.preInstruction hash];
  }
  if (self.hasPreQuestion) {
    hashCode = hashCode * 31 + [self.preQuestion hash];
  }
  if (self.hasTransactionId) {
    hashCode = hashCode * 31 + [self.transactionId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductConfirmRequest_Builder()
@property (retain) ProductConfirmRequest* result;
@end

@implementation ProductConfirmRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductConfirmRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductConfirmRequest_Builder*) clear {
  self.result = [[[ProductConfirmRequest alloc] init] autorelease];
  return self;
}
- (ProductConfirmRequest_Builder*) clone {
  return [ProductConfirmRequest builderWithPrototype:result];
}
- (ProductConfirmRequest*) defaultInstance {
  return [ProductConfirmRequest defaultInstance];
}
- (ProductConfirmRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductConfirmRequest*) buildPartial {
  ProductConfirmRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductConfirmRequest_Builder*) mergeFrom:(ProductConfirmRequest*) other {
  if (other == [ProductConfirmRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestion) {
    [self setQuestion:other.question];
  }
  if (other.propertiesArray.count > 0) {
    if (result.propertiesArray == nil) {
      result.propertiesArray = [[other.propertiesArray copyWithZone:[other.propertiesArray zone]] autorelease];
    } else {
      [result.propertiesArray appendArray:other.propertiesArray];
    }
  }
  if (other.hasServer) {
    [self setServer:other.server];
  }
  if (other.hasPreInstruction) {
    [self mergePreInstruction:other.preInstruction];
  }
  if (other.hasPreQuestion) {
    [self mergePreQuestion:other.preQuestion];
  }
  if (other.hasTransactionId) {
    [self setTransactionId:other.transactionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductConfirmRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductConfirmRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setQuestion:[input readString]];
        break;
      }
      case 18: {
        Property_Builder* subBuilder = [Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperties:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setServer:[input readString]];
        break;
      }
      case 34: {
        ProductClientInstruction_Builder* subBuilder = [ProductClientInstruction builder];
        if (self.hasPreInstruction) {
          [subBuilder mergeFrom:self.preInstruction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPreInstruction:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        ProductInteractiveQuestion_Builder* subBuilder = [ProductInteractiveQuestion builder];
        if (self.hasPreQuestion) {
          [subBuilder mergeFrom:self.preQuestion];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPreQuestion:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        [self setTransactionId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestion {
  return result.hasQuestion;
}
- (NSString*) question {
  return result.question;
}
- (ProductConfirmRequest_Builder*) setQuestion:(NSString*) value {
  result.hasQuestion = YES;
  result.question = value;
  return self;
}
- (ProductConfirmRequest_Builder*) clearQuestion {
  result.hasQuestion = NO;
  result.question = @"";
  return self;
}
- (PBAppendableArray *)properties {
  return result.propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [result propertiesAtIndex:index];
}
- (ProductConfirmRequest_Builder *)addProperties:(Property*)value {
  if (result.propertiesArray == nil) {
    result.propertiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.propertiesArray addObject:value];
  return self;
}
- (ProductConfirmRequest_Builder *)setPropertiesArray:(NSArray *)array {
  result.propertiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductConfirmRequest_Builder *)setPropertiesValues:(const Property* *)values count:(NSUInteger)count {
  result.propertiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductConfirmRequest_Builder *)clearProperties {
  result.propertiesArray = nil;
  return self;
}
- (BOOL) hasServer {
  return result.hasServer;
}
- (NSString*) server {
  return result.server;
}
- (ProductConfirmRequest_Builder*) setServer:(NSString*) value {
  result.hasServer = YES;
  result.server = value;
  return self;
}
- (ProductConfirmRequest_Builder*) clearServer {
  result.hasServer = NO;
  result.server = @"";
  return self;
}
- (BOOL) hasPreInstruction {
  return result.hasPreInstruction;
}
- (ProductClientInstruction*) preInstruction {
  return result.preInstruction;
}
- (ProductConfirmRequest_Builder*) setPreInstruction:(ProductClientInstruction*) value {
  result.hasPreInstruction = YES;
  result.preInstruction = value;
  return self;
}
- (ProductConfirmRequest_Builder*) setPreInstructionBuilder:(ProductClientInstruction_Builder*) builderForValue {
  return [self setPreInstruction:[builderForValue build]];
}
- (ProductConfirmRequest_Builder*) mergePreInstruction:(ProductClientInstruction*) value {
  if (result.hasPreInstruction &&
      result.preInstruction != [ProductClientInstruction defaultInstance]) {
    result.preInstruction =
      [[[ProductClientInstruction builderWithPrototype:result.preInstruction] mergeFrom:value] buildPartial];
  } else {
    result.preInstruction = value;
  }
  result.hasPreInstruction = YES;
  return self;
}
- (ProductConfirmRequest_Builder*) clearPreInstruction {
  result.hasPreInstruction = NO;
  result.preInstruction = [ProductClientInstruction defaultInstance];
  return self;
}
- (BOOL) hasPreQuestion {
  return result.hasPreQuestion;
}
- (ProductInteractiveQuestion*) preQuestion {
  return result.preQuestion;
}
- (ProductConfirmRequest_Builder*) setPreQuestion:(ProductInteractiveQuestion*) value {
  result.hasPreQuestion = YES;
  result.preQuestion = value;
  return self;
}
- (ProductConfirmRequest_Builder*) setPreQuestionBuilder:(ProductInteractiveQuestion_Builder*) builderForValue {
  return [self setPreQuestion:[builderForValue build]];
}
- (ProductConfirmRequest_Builder*) mergePreQuestion:(ProductInteractiveQuestion*) value {
  if (result.hasPreQuestion &&
      result.preQuestion != [ProductInteractiveQuestion defaultInstance]) {
    result.preQuestion =
      [[[ProductInteractiveQuestion builderWithPrototype:result.preQuestion] mergeFrom:value] buildPartial];
  } else {
    result.preQuestion = value;
  }
  result.hasPreQuestion = YES;
  return self;
}
- (ProductConfirmRequest_Builder*) clearPreQuestion {
  result.hasPreQuestion = NO;
  result.preQuestion = [ProductInteractiveQuestion defaultInstance];
  return self;
}
- (BOOL) hasTransactionId {
  return result.hasTransactionId;
}
- (NSString*) transactionId {
  return result.transactionId;
}
- (ProductConfirmRequest_Builder*) setTransactionId:(NSString*) value {
  result.hasTransactionId = YES;
  result.transactionId = value;
  return self;
}
- (ProductConfirmRequest_Builder*) clearTransactionId {
  result.hasTransactionId = NO;
  result.transactionId = @"";
  return self;
}
@end

@interface ProductClientInstruction ()
@property (retain) NSString* type;
@property (retain) PBAppendableArray * featuresArray;
@end

@implementation ProductClientInstruction

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
@synthesize featuresArray;
@dynamic features;
- (void) dealloc {
  self.type = nil;
  self.featuresArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = @"";
  }
  return self;
}
static ProductClientInstruction* defaultProductClientInstructionInstance = nil;
+ (void) initialize {
  if (self == [ProductClientInstruction class]) {
    defaultProductClientInstructionInstance = [[ProductClientInstruction alloc] init];
  }
}
+ (ProductClientInstruction*) defaultInstance {
  return defaultProductClientInstructionInstance;
}
- (ProductClientInstruction*) defaultInstance {
  return defaultProductClientInstructionInstance;
}
- (PBArray *)features {
  return featuresArray;
}
- (Property*)featuresAtIndex:(NSUInteger)index {
  return [featuresArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  for (Property* element in self.features) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeString:1 value:self.type];
  }
  for (Property *element in self.featuresArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeStringSize(1, self.type);
  }
  for (Property *element in self.featuresArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductClientInstruction*) parseFromData:(NSData*) data {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromData:data] build];
}
+ (ProductClientInstruction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductClientInstruction*) parseFromInputStream:(NSInputStream*) input {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromInputStream:input] build];
}
+ (ProductClientInstruction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductClientInstruction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromCodedInputStream:input] build];
}
+ (ProductClientInstruction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductClientInstruction*)[[[ProductClientInstruction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductClientInstruction_Builder*) builder {
  return [[[ProductClientInstruction_Builder alloc] init] autorelease];
}
+ (ProductClientInstruction_Builder*) builderWithPrototype:(ProductClientInstruction*) prototype {
  return [[ProductClientInstruction builder] mergeFrom:prototype];
}
- (ProductClientInstruction_Builder*) builder {
  return [ProductClientInstruction builder];
}
- (ProductClientInstruction_Builder*) toBuilder {
  return [ProductClientInstruction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  for (Property* element in self.featuresArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"features"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductClientInstruction class]]) {
    return NO;
  }
  ProductClientInstruction *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      [self.featuresArray isEqualToArray:otherMessage.featuresArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  for (Property* element in self.featuresArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductClientInstruction_Builder()
@property (retain) ProductClientInstruction* result;
@end

@implementation ProductClientInstruction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductClientInstruction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductClientInstruction_Builder*) clear {
  self.result = [[[ProductClientInstruction alloc] init] autorelease];
  return self;
}
- (ProductClientInstruction_Builder*) clone {
  return [ProductClientInstruction builderWithPrototype:result];
}
- (ProductClientInstruction*) defaultInstance {
  return [ProductClientInstruction defaultInstance];
}
- (ProductClientInstruction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductClientInstruction*) buildPartial {
  ProductClientInstruction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductClientInstruction_Builder*) mergeFrom:(ProductClientInstruction*) other {
  if (other == [ProductClientInstruction defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.featuresArray.count > 0) {
    if (result.featuresArray == nil) {
      result.featuresArray = [[other.featuresArray copyWithZone:[other.featuresArray zone]] autorelease];
    } else {
      [result.featuresArray appendArray:other.featuresArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductClientInstruction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductClientInstruction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setType:[input readString]];
        break;
      }
      case 18: {
        Property_Builder* subBuilder = [Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeatures:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (NSString*) type {
  return result.type;
}
- (ProductClientInstruction_Builder*) setType:(NSString*) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ProductClientInstruction_Builder*) clearType {
  result.hasType = NO;
  result.type = @"";
  return self;
}
- (PBAppendableArray *)features {
  return result.featuresArray;
}
- (Property*)featuresAtIndex:(NSUInteger)index {
  return [result featuresAtIndex:index];
}
- (ProductClientInstruction_Builder *)addFeatures:(Property*)value {
  if (result.featuresArray == nil) {
    result.featuresArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.featuresArray addObject:value];
  return self;
}
- (ProductClientInstruction_Builder *)setFeaturesArray:(NSArray *)array {
  result.featuresArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductClientInstruction_Builder *)setFeaturesValues:(const Property* *)values count:(NSUInteger)count {
  result.featuresArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductClientInstruction_Builder *)clearFeatures {
  result.featuresArray = nil;
  return self;
}
@end

@interface ProductInteractiveQuestion ()
@property (retain) NSString* type;
@property (retain) NSString* display;
@property (retain) NSString* field;
@property (retain) PBAppendableArray * optionsArray;
@end

@implementation ProductInteractiveQuestion

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasDisplay {
  return !!hasDisplay_;
}
- (void) setHasDisplay:(BOOL) value_ {
  hasDisplay_ = !!value_;
}
@synthesize display;
- (BOOL) hasField {
  return !!hasField_;
}
- (void) setHasField:(BOOL) value_ {
  hasField_ = !!value_;
}
@synthesize field;
@synthesize optionsArray;
@dynamic options;
- (void) dealloc {
  self.type = nil;
  self.display = nil;
  self.field = nil;
  self.optionsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = @"";
    self.display = @"";
    self.field = @"";
  }
  return self;
}
static ProductInteractiveQuestion* defaultProductInteractiveQuestionInstance = nil;
+ (void) initialize {
  if (self == [ProductInteractiveQuestion class]) {
    defaultProductInteractiveQuestionInstance = [[ProductInteractiveQuestion alloc] init];
  }
}
+ (ProductInteractiveQuestion*) defaultInstance {
  return defaultProductInteractiveQuestionInstance;
}
- (ProductInteractiveQuestion*) defaultInstance {
  return defaultProductInteractiveQuestionInstance;
}
- (PBArray *)options {
  return optionsArray;
}
- (Property*)optionsAtIndex:(NSUInteger)index {
  return [optionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  for (Property* element in self.options) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeString:1 value:self.type];
  }
  if (self.hasDisplay) {
    [output writeString:2 value:self.display];
  }
  if (self.hasField) {
    [output writeString:3 value:self.field];
  }
  for (Property *element in self.optionsArray) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeStringSize(1, self.type);
  }
  if (self.hasDisplay) {
    size_ += computeStringSize(2, self.display);
  }
  if (self.hasField) {
    size_ += computeStringSize(3, self.field);
  }
  for (Property *element in self.optionsArray) {
    size_ += computeMessageSize(4, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductInteractiveQuestion*) parseFromData:(NSData*) data {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromData:data] build];
}
+ (ProductInteractiveQuestion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductInteractiveQuestion*) parseFromInputStream:(NSInputStream*) input {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromInputStream:input] build];
}
+ (ProductInteractiveQuestion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductInteractiveQuestion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromCodedInputStream:input] build];
}
+ (ProductInteractiveQuestion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductInteractiveQuestion*)[[[ProductInteractiveQuestion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductInteractiveQuestion_Builder*) builder {
  return [[[ProductInteractiveQuestion_Builder alloc] init] autorelease];
}
+ (ProductInteractiveQuestion_Builder*) builderWithPrototype:(ProductInteractiveQuestion*) prototype {
  return [[ProductInteractiveQuestion builder] mergeFrom:prototype];
}
- (ProductInteractiveQuestion_Builder*) builder {
  return [ProductInteractiveQuestion builder];
}
- (ProductInteractiveQuestion_Builder*) toBuilder {
  return [ProductInteractiveQuestion builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  if (self.hasDisplay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"display", self.display];
  }
  if (self.hasField) {
    [output appendFormat:@"%@%@: %@\n", indent, @"field", self.field];
  }
  for (Property* element in self.optionsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"options"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductInteractiveQuestion class]]) {
    return NO;
  }
  ProductInteractiveQuestion *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      self.hasDisplay == otherMessage.hasDisplay &&
      (!self.hasDisplay || [self.display isEqual:otherMessage.display]) &&
      self.hasField == otherMessage.hasField &&
      (!self.hasField || [self.field isEqual:otherMessage.field]) &&
      [self.optionsArray isEqualToArray:otherMessage.optionsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  if (self.hasDisplay) {
    hashCode = hashCode * 31 + [self.display hash];
  }
  if (self.hasField) {
    hashCode = hashCode * 31 + [self.field hash];
  }
  for (Property* element in self.optionsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductInteractiveQuestion_Builder()
@property (retain) ProductInteractiveQuestion* result;
@end

@implementation ProductInteractiveQuestion_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductInteractiveQuestion alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductInteractiveQuestion_Builder*) clear {
  self.result = [[[ProductInteractiveQuestion alloc] init] autorelease];
  return self;
}
- (ProductInteractiveQuestion_Builder*) clone {
  return [ProductInteractiveQuestion builderWithPrototype:result];
}
- (ProductInteractiveQuestion*) defaultInstance {
  return [ProductInteractiveQuestion defaultInstance];
}
- (ProductInteractiveQuestion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductInteractiveQuestion*) buildPartial {
  ProductInteractiveQuestion* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductInteractiveQuestion_Builder*) mergeFrom:(ProductInteractiveQuestion*) other {
  if (other == [ProductInteractiveQuestion defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasDisplay) {
    [self setDisplay:other.display];
  }
  if (other.hasField) {
    [self setField:other.field];
  }
  if (other.optionsArray.count > 0) {
    if (result.optionsArray == nil) {
      result.optionsArray = [[other.optionsArray copyWithZone:[other.optionsArray zone]] autorelease];
    } else {
      [result.optionsArray appendArray:other.optionsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductInteractiveQuestion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductInteractiveQuestion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setType:[input readString]];
        break;
      }
      case 18: {
        [self setDisplay:[input readString]];
        break;
      }
      case 26: {
        [self setField:[input readString]];
        break;
      }
      case 34: {
        Property_Builder* subBuilder = [Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (NSString*) type {
  return result.type;
}
- (ProductInteractiveQuestion_Builder*) setType:(NSString*) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ProductInteractiveQuestion_Builder*) clearType {
  result.hasType = NO;
  result.type = @"";
  return self;
}
- (BOOL) hasDisplay {
  return result.hasDisplay;
}
- (NSString*) display {
  return result.display;
}
- (ProductInteractiveQuestion_Builder*) setDisplay:(NSString*) value {
  result.hasDisplay = YES;
  result.display = value;
  return self;
}
- (ProductInteractiveQuestion_Builder*) clearDisplay {
  result.hasDisplay = NO;
  result.display = @"";
  return self;
}
- (BOOL) hasField {
  return result.hasField;
}
- (NSString*) field {
  return result.field;
}
- (ProductInteractiveQuestion_Builder*) setField:(NSString*) value {
  result.hasField = YES;
  result.field = value;
  return self;
}
- (ProductInteractiveQuestion_Builder*) clearField {
  result.hasField = NO;
  result.field = @"";
  return self;
}
- (PBAppendableArray *)options {
  return result.optionsArray;
}
- (Property*)optionsAtIndex:(NSUInteger)index {
  return [result optionsAtIndex:index];
}
- (ProductInteractiveQuestion_Builder *)addOptions:(Property*)value {
  if (result.optionsArray == nil) {
    result.optionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.optionsArray addObject:value];
  return self;
}
- (ProductInteractiveQuestion_Builder *)setOptionsArray:(NSArray *)array {
  result.optionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductInteractiveQuestion_Builder *)setOptionsValues:(const Property* *)values count:(NSUInteger)count {
  result.optionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductInteractiveQuestion_Builder *)clearOptions {
  result.optionsArray = nil;
  return self;
}
@end

@interface ProductResponseStatus ()
@property (retain) NSString* code;
@property (retain) NSString* message;
@end

@implementation ProductResponseStatus

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value_ {
  hasCode_ = !!value_;
}
@synthesize code;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (void) dealloc {
  self.code = nil;
  self.message = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = @"";
    self.message = @"";
  }
  return self;
}
static ProductResponseStatus* defaultProductResponseStatusInstance = nil;
+ (void) initialize {
  if (self == [ProductResponseStatus class]) {
    defaultProductResponseStatusInstance = [[ProductResponseStatus alloc] init];
  }
}
+ (ProductResponseStatus*) defaultInstance {
  return defaultProductResponseStatusInstance;
}
- (ProductResponseStatus*) defaultInstance {
  return defaultProductResponseStatusInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasMessage) {
    [output writeString:2 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(2, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductResponseStatus*) parseFromData:(NSData*) data {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromData:data] build];
}
+ (ProductResponseStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductResponseStatus*) parseFromInputStream:(NSInputStream*) input {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromInputStream:input] build];
}
+ (ProductResponseStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductResponseStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromCodedInputStream:input] build];
}
+ (ProductResponseStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponseStatus*)[[[ProductResponseStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductResponseStatus_Builder*) builder {
  return [[[ProductResponseStatus_Builder alloc] init] autorelease];
}
+ (ProductResponseStatus_Builder*) builderWithPrototype:(ProductResponseStatus*) prototype {
  return [[ProductResponseStatus builder] mergeFrom:prototype];
}
- (ProductResponseStatus_Builder*) builder {
  return [ProductResponseStatus builder];
}
- (ProductResponseStatus_Builder*) toBuilder {
  return [ProductResponseStatus builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductResponseStatus class]]) {
    return NO;
  }
  ProductResponseStatus *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductResponseStatus_Builder()
@property (retain) ProductResponseStatus* result;
@end

@implementation ProductResponseStatus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductResponseStatus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductResponseStatus_Builder*) clear {
  self.result = [[[ProductResponseStatus alloc] init] autorelease];
  return self;
}
- (ProductResponseStatus_Builder*) clone {
  return [ProductResponseStatus builderWithPrototype:result];
}
- (ProductResponseStatus*) defaultInstance {
  return [ProductResponseStatus defaultInstance];
}
- (ProductResponseStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductResponseStatus*) buildPartial {
  ProductResponseStatus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductResponseStatus_Builder*) mergeFrom:(ProductResponseStatus*) other {
  if (other == [ProductResponseStatus defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductResponseStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductResponseStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (NSString*) code {
  return result.code;
}
- (ProductResponseStatus_Builder*) setCode:(NSString*) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (ProductResponseStatus_Builder*) clearCode {
  result.hasCode = NO;
  result.code = @"";
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (ProductResponseStatus_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (ProductResponseStatus_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
@end

@interface ProductResponse ()
@property (retain) ProductResponseStatus* status;
@property (retain) NSString* answer;
@property (retain) NSString* server;
@property BOOL needInteract;
@property (retain) ProductClientInstruction* preInstruction;
@property (retain) ProductInteractiveQuestion* preQuestion;
@property (retain) PBAppendableArray * propertiesArray;
@end

@implementation ProductResponse

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasAnswer {
  return !!hasAnswer_;
}
- (void) setHasAnswer:(BOOL) value_ {
  hasAnswer_ = !!value_;
}
@synthesize answer;
- (BOOL) hasServer {
  return !!hasServer_;
}
- (void) setHasServer:(BOOL) value_ {
  hasServer_ = !!value_;
}
@synthesize server;
- (BOOL) hasNeedInteract {
  return !!hasNeedInteract_;
}
- (void) setHasNeedInteract:(BOOL) value_ {
  hasNeedInteract_ = !!value_;
}
- (BOOL) needInteract {
  return !!needInteract_;
}
- (void) setNeedInteract:(BOOL) value_ {
  needInteract_ = !!value_;
}
- (BOOL) hasPreInstruction {
  return !!hasPreInstruction_;
}
- (void) setHasPreInstruction:(BOOL) value_ {
  hasPreInstruction_ = !!value_;
}
@synthesize preInstruction;
- (BOOL) hasPreQuestion {
  return !!hasPreQuestion_;
}
- (void) setHasPreQuestion:(BOOL) value_ {
  hasPreQuestion_ = !!value_;
}
@synthesize preQuestion;
@synthesize propertiesArray;
@dynamic properties;
- (void) dealloc {
  self.status = nil;
  self.answer = nil;
  self.server = nil;
  self.preInstruction = nil;
  self.preQuestion = nil;
  self.propertiesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.status = [ProductResponseStatus defaultInstance];
    self.answer = @"";
    self.server = @"";
    self.needInteract = NO;
    self.preInstruction = [ProductClientInstruction defaultInstance];
    self.preQuestion = [ProductInteractiveQuestion defaultInstance];
  }
  return self;
}
static ProductResponse* defaultProductResponseInstance = nil;
+ (void) initialize {
  if (self == [ProductResponse class]) {
    defaultProductResponseInstance = [[ProductResponse alloc] init];
  }
}
+ (ProductResponse*) defaultInstance {
  return defaultProductResponseInstance;
}
- (ProductResponse*) defaultInstance {
  return defaultProductResponseInstance;
}
- (PBArray *)properties {
  return propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [propertiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasServer) {
    return NO;
  }
  if (!self.status.isInitialized) {
    return NO;
  }
  if (self.hasPreInstruction) {
    if (!self.preInstruction.isInitialized) {
      return NO;
    }
  }
  if (self.hasPreQuestion) {
    if (!self.preQuestion.isInitialized) {
      return NO;
    }
  }
  for (Property* element in self.properties) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasAnswer) {
    [output writeString:2 value:self.answer];
  }
  if (self.hasServer) {
    [output writeString:3 value:self.server];
  }
  if (self.hasNeedInteract) {
    [output writeBool:4 value:self.needInteract];
  }
  if (self.hasPreInstruction) {
    [output writeMessage:5 value:self.preInstruction];
  }
  if (self.hasPreQuestion) {
    [output writeMessage:6 value:self.preQuestion];
  }
  for (Property *element in self.propertiesArray) {
    [output writeMessage:7 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasAnswer) {
    size_ += computeStringSize(2, self.answer);
  }
  if (self.hasServer) {
    size_ += computeStringSize(3, self.server);
  }
  if (self.hasNeedInteract) {
    size_ += computeBoolSize(4, self.needInteract);
  }
  if (self.hasPreInstruction) {
    size_ += computeMessageSize(5, self.preInstruction);
  }
  if (self.hasPreQuestion) {
    size_ += computeMessageSize(6, self.preQuestion);
  }
  for (Property *element in self.propertiesArray) {
    size_ += computeMessageSize(7, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProductResponse*) parseFromData:(NSData*) data {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromData:data] build];
}
+ (ProductResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProductResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromInputStream:input] build];
}
+ (ProductResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ProductResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProductResponse*)[[[ProductResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProductResponse_Builder*) builder {
  return [[[ProductResponse_Builder alloc] init] autorelease];
}
+ (ProductResponse_Builder*) builderWithPrototype:(ProductResponse*) prototype {
  return [[ProductResponse builder] mergeFrom:prototype];
}
- (ProductResponse_Builder*) builder {
  return [ProductResponse builder];
}
- (ProductResponse_Builder*) toBuilder {
  return [ProductResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAnswer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"answer", self.answer];
  }
  if (self.hasServer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"server", self.server];
  }
  if (self.hasNeedInteract) {
    [output appendFormat:@"%@%@: %@\n", indent, @"needInteract", [NSNumber numberWithBool:self.needInteract]];
  }
  if (self.hasPreInstruction) {
    [output appendFormat:@"%@%@ {\n", indent, @"preInstruction"];
    [self.preInstruction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPreQuestion) {
    [output appendFormat:@"%@%@ {\n", indent, @"preQuestion"];
    [self.preQuestion writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Property* element in self.propertiesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"properties"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProductResponse class]]) {
    return NO;
  }
  ProductResponse *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasAnswer == otherMessage.hasAnswer &&
      (!self.hasAnswer || [self.answer isEqual:otherMessage.answer]) &&
      self.hasServer == otherMessage.hasServer &&
      (!self.hasServer || [self.server isEqual:otherMessage.server]) &&
      self.hasNeedInteract == otherMessage.hasNeedInteract &&
      (!self.hasNeedInteract || self.needInteract == otherMessage.needInteract) &&
      self.hasPreInstruction == otherMessage.hasPreInstruction &&
      (!self.hasPreInstruction || [self.preInstruction isEqual:otherMessage.preInstruction]) &&
      self.hasPreQuestion == otherMessage.hasPreQuestion &&
      (!self.hasPreQuestion || [self.preQuestion isEqual:otherMessage.preQuestion]) &&
      [self.propertiesArray isEqualToArray:otherMessage.propertiesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasAnswer) {
    hashCode = hashCode * 31 + [self.answer hash];
  }
  if (self.hasServer) {
    hashCode = hashCode * 31 + [self.server hash];
  }
  if (self.hasNeedInteract) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.needInteract] hash];
  }
  if (self.hasPreInstruction) {
    hashCode = hashCode * 31 + [self.preInstruction hash];
  }
  if (self.hasPreQuestion) {
    hashCode = hashCode * 31 + [self.preQuestion hash];
  }
  for (Property* element in self.propertiesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProductResponse_Builder()
@property (retain) ProductResponse* result;
@end

@implementation ProductResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProductResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProductResponse_Builder*) clear {
  self.result = [[[ProductResponse alloc] init] autorelease];
  return self;
}
- (ProductResponse_Builder*) clone {
  return [ProductResponse builderWithPrototype:result];
}
- (ProductResponse*) defaultInstance {
  return [ProductResponse defaultInstance];
}
- (ProductResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProductResponse*) buildPartial {
  ProductResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProductResponse_Builder*) mergeFrom:(ProductResponse*) other {
  if (other == [ProductResponse defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasAnswer) {
    [self setAnswer:other.answer];
  }
  if (other.hasServer) {
    [self setServer:other.server];
  }
  if (other.hasNeedInteract) {
    [self setNeedInteract:other.needInteract];
  }
  if (other.hasPreInstruction) {
    [self mergePreInstruction:other.preInstruction];
  }
  if (other.hasPreQuestion) {
    [self mergePreQuestion:other.preQuestion];
  }
  if (other.propertiesArray.count > 0) {
    if (result.propertiesArray == nil) {
      result.propertiesArray = [[other.propertiesArray copyWithZone:[other.propertiesArray zone]] autorelease];
    } else {
      [result.propertiesArray appendArray:other.propertiesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProductResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProductResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ProductResponseStatus_Builder* subBuilder = [ProductResponseStatus builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setAnswer:[input readString]];
        break;
      }
      case 26: {
        [self setServer:[input readString]];
        break;
      }
      case 32: {
        [self setNeedInteract:[input readBool]];
        break;
      }
      case 42: {
        ProductClientInstruction_Builder* subBuilder = [ProductClientInstruction builder];
        if (self.hasPreInstruction) {
          [subBuilder mergeFrom:self.preInstruction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPreInstruction:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        ProductInteractiveQuestion_Builder* subBuilder = [ProductInteractiveQuestion builder];
        if (self.hasPreQuestion) {
          [subBuilder mergeFrom:self.preQuestion];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPreQuestion:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        Property_Builder* subBuilder = [Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperties:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ProductResponseStatus*) status {
  return result.status;
}
- (ProductResponse_Builder*) setStatus:(ProductResponseStatus*) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ProductResponse_Builder*) setStatusBuilder:(ProductResponseStatus_Builder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (ProductResponse_Builder*) mergeStatus:(ProductResponseStatus*) value {
  if (result.hasStatus &&
      result.status != [ProductResponseStatus defaultInstance]) {
    result.status =
      [[[ProductResponseStatus builderWithPrototype:result.status] mergeFrom:value] buildPartial];
  } else {
    result.status = value;
  }
  result.hasStatus = YES;
  return self;
}
- (ProductResponse_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = [ProductResponseStatus defaultInstance];
  return self;
}
- (BOOL) hasAnswer {
  return result.hasAnswer;
}
- (NSString*) answer {
  return result.answer;
}
- (ProductResponse_Builder*) setAnswer:(NSString*) value {
  result.hasAnswer = YES;
  result.answer = value;
  return self;
}
- (ProductResponse_Builder*) clearAnswer {
  result.hasAnswer = NO;
  result.answer = @"";
  return self;
}
- (BOOL) hasServer {
  return result.hasServer;
}
- (NSString*) server {
  return result.server;
}
- (ProductResponse_Builder*) setServer:(NSString*) value {
  result.hasServer = YES;
  result.server = value;
  return self;
}
- (ProductResponse_Builder*) clearServer {
  result.hasServer = NO;
  result.server = @"";
  return self;
}
- (BOOL) hasNeedInteract {
  return result.hasNeedInteract;
}
- (BOOL) needInteract {
  return result.needInteract;
}
- (ProductResponse_Builder*) setNeedInteract:(BOOL) value {
  result.hasNeedInteract = YES;
  result.needInteract = value;
  return self;
}
- (ProductResponse_Builder*) clearNeedInteract {
  result.hasNeedInteract = NO;
  result.needInteract = NO;
  return self;
}
- (BOOL) hasPreInstruction {
  return result.hasPreInstruction;
}
- (ProductClientInstruction*) preInstruction {
  return result.preInstruction;
}
- (ProductResponse_Builder*) setPreInstruction:(ProductClientInstruction*) value {
  result.hasPreInstruction = YES;
  result.preInstruction = value;
  return self;
}
- (ProductResponse_Builder*) setPreInstructionBuilder:(ProductClientInstruction_Builder*) builderForValue {
  return [self setPreInstruction:[builderForValue build]];
}
- (ProductResponse_Builder*) mergePreInstruction:(ProductClientInstruction*) value {
  if (result.hasPreInstruction &&
      result.preInstruction != [ProductClientInstruction defaultInstance]) {
    result.preInstruction =
      [[[ProductClientInstruction builderWithPrototype:result.preInstruction] mergeFrom:value] buildPartial];
  } else {
    result.preInstruction = value;
  }
  result.hasPreInstruction = YES;
  return self;
}
- (ProductResponse_Builder*) clearPreInstruction {
  result.hasPreInstruction = NO;
  result.preInstruction = [ProductClientInstruction defaultInstance];
  return self;
}
- (BOOL) hasPreQuestion {
  return result.hasPreQuestion;
}
- (ProductInteractiveQuestion*) preQuestion {
  return result.preQuestion;
}
- (ProductResponse_Builder*) setPreQuestion:(ProductInteractiveQuestion*) value {
  result.hasPreQuestion = YES;
  result.preQuestion = value;
  return self;
}
- (ProductResponse_Builder*) setPreQuestionBuilder:(ProductInteractiveQuestion_Builder*) builderForValue {
  return [self setPreQuestion:[builderForValue build]];
}
- (ProductResponse_Builder*) mergePreQuestion:(ProductInteractiveQuestion*) value {
  if (result.hasPreQuestion &&
      result.preQuestion != [ProductInteractiveQuestion defaultInstance]) {
    result.preQuestion =
      [[[ProductInteractiveQuestion builderWithPrototype:result.preQuestion] mergeFrom:value] buildPartial];
  } else {
    result.preQuestion = value;
  }
  result.hasPreQuestion = YES;
  return self;
}
- (ProductResponse_Builder*) clearPreQuestion {
  result.hasPreQuestion = NO;
  result.preQuestion = [ProductInteractiveQuestion defaultInstance];
  return self;
}
- (PBAppendableArray *)properties {
  return result.propertiesArray;
}
- (Property*)propertiesAtIndex:(NSUInteger)index {
  return [result propertiesAtIndex:index];
}
- (ProductResponse_Builder *)addProperties:(Property*)value {
  if (result.propertiesArray == nil) {
    result.propertiesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.propertiesArray addObject:value];
  return self;
}
- (ProductResponse_Builder *)setPropertiesArray:(NSArray *)array {
  result.propertiesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductResponse_Builder *)setPropertiesValues:(const Property* *)values count:(NSUInteger)count {
  result.propertiesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (ProductResponse_Builder *)clearProperties {
  result.propertiesArray = nil;
  return self;
}
@end

